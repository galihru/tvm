name: CI & Publish

on:
  pull_request:
    branches:
      - main
    types:
      - opened

  push:
    branches:
      - main

jobs:
  automerge:
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    name: Auto‑merge Dependabot PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auto‑merge Dependabot
        uses: pascalgn/automerge-action@v0.14.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash

  publish:
    if: github.event_name == 'push'
    name: Bump & Publish Package
    runs-on: ubuntu-latest
    needs: []
    permissions:
      contents: write
      packages: write
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Bump version (patch)
        id: bump
        run: npm version patch --no-git-tag-version -m 'chore(release): bump to %s [skip ci]'


      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: version bump to $PACKAGE_VERSION [skip ci]"
          git push origin HEAD:main

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build package
        run: npm run build

      - name: Publish to npmjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --registry=https://registry.npmjs.org
          echo "NPM_PACKAGE_URL=https://www.npmjs.com/package/@galihru/tvmai" >> $GITHUB_ENV

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const version = process.env.PACKAGE_VERSION;
            const url = process.env.NPM_PACKAGE_URL;
            const dep = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'TVM AI npmjs',
              description: `Published @galihru/tvmai@${version}`,
              auto_merge: false,
              required_contexts: []
            });
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: dep.data.id,
              state: 'success',
              environment_url: url,
              log_url: url,
              description: `Version ${version} published to npmjs`
            });
            console.log(`Deployment created: ${url}`);

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp package.json package.json.bak
          npm pkg set name=@galihru/tvmai
          npm pkg set publishConfig.registry=https://npm.pkg.github.com
          npm publish --access public --registry=https://npm.pkg.github.com
          mv package.json.bak package.json

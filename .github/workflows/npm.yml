name: CI & Publish

on:
  pull_request:
    branches:
      - main
    types:
      - opened

  push:
    branches:
      - main

jobs:
  automerge:
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    name: Auto‑merge Dependabot PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auto‑merge Dependabot
        uses: pascalgn/automerge-action@v0.14.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash

  publish:
    if: github.event_name == 'push'
    name: Bump & Publish Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get current version
        id: version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Bump version (patch)
        id: bump
        run: |
          # First approach - simple version bump without message
          npm version patch --no-git-tag-version --no-commit-hooks
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "Version bumped from $PACKAGE_VERSION to $NEW_VERSION"

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): bump version to $NEW_VERSION [skip ci]"
          git push origin HEAD:main

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build package
        run: npm run build

      - name: Publish to npmjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --registry=https://registry.npmjs.org
          echo "NPM_PACKAGE_URL=https://www.npmjs.com/package/@galihru/tvmai" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp package.json package.json.bak
          npm pkg set name=@galihru/tvmai
          npm pkg set publishConfig.registry=https://npm.pkg.github.com
          npm publish --access public --registry=https://npm.pkg.github.com
          mv package.json.bak package.json
